openapi: 3.0.3
info:
  title: Customer Accounts API
  version: 1.0.0
  description: API to manage customer accounts (CRUD operations)

servers:
  - url: https://ecad9e6b-e034-43ac-a3a0-46553e637d00-prod.e1-us-east-azure.choreoapis.dev/grand-union-bank-unity/accounts-service-nodejs/v1.0

paths:
  /accounts:
    get:
      summary: Get all accounts
      responses:
        '200':
          description: List of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
    post:
      summary: Create a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreate'
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /accounts/{id}:
    parameters:
      - name: id
        in: path
        description: Account ID
        required: true
        schema:
          type: integer
          example: 1

    get:
      summary: Get account by ID
      responses:
        '200':
          description: Account found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update account by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdate'
      responses:
        '200':
          description: Account updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete account by ID
      responses:
        '200':
          description: Account deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Account 1 deleted.
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /accounts/{id}/balance:
    get:
      summary: Get account balance
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Account balance retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalance'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /accounts/{id}/transactions:
    get:
      summary: Get account transaction history
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Transaction history retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          example: 1
        customerId:
          type: string
          example: CUST1001
        accountType:
          type: string
          enum: [savings, current]
          example: savings
        balance:
          type: number
          format: float
          example: 5000
        status:
          type: string
          enum: [active, closed, suspended]
          example: active
        createdAt:
          type: string
          format: date-time
          example: "2024-01-10T09:00:00Z"

    AccountCreate:
      type: object
      required:
        - customerId
        - accountType
        - balance
        - status
      properties:
        customerId:
          type: string
          example: CUST1001
        accountType:
          type: string
          enum: [savings, current]
          example: savings
        balance:
          type: number
          format: float
          example: 5000
        status:
          type: string
          enum: [active, closed, suspended]
          example: active

    AccountUpdate:
      type: object
      properties:
        customerId:
          type: string
          example: CUST1001
        accountType:
          type: string
          enum: [savings, current]
          example: savings
        balance:
          type: number
          format: float
          example: 5000
        status:
          type: string
          enum: [active, closed, suspended]
          example: active

    AccountBalance:
      type: object
      properties:
        accountId:
          type: integer
          example: 1
        balance:
          type: number
          format: float
          example: 5000.00
        currency:
          type: string
          example: LKR

    Transaction:
      type: object
      properties:
        transactionId:
          type: string
          example: TXN12345
        accountId:
          type: integer
          example: 1
        type:
          type: string
          enum: [credit, debit]
          example: debit
        amount:
          type: number
          format: float
          example: 1500.00
        description:
          type: string
          example: Utility bill payment
        timestamp:
          type: string
          format: date-time
          example: "2024-01-12T10:30:00Z"

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: Invalid input
